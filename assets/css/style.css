:root {
  --base-bg-color: "";
  --base-color: #E6e6e6;
  --base-fallback-bg-color: #191919;
  --base-body-gap: 2.5vw;
  --primary: #FB9A09;
  --white: #e6e6e6;
  --dark: #262626;
  --danger: #d61818;
  --base-logo-brush-color: var(--primary);
  --roboto: "Roboto", sans-serif;
  --kanit: "Kanit", sans-serif;
  --header-height: calc(90px + 1vw);
  --input-bg-color: transparent;
  --transition: all .5s ease-in-out;
}

.display--none {
  display: none;
}

*, *::after, *::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  font-size: 16px;
}

body {
  background-color: var(--base-fallback-bg-color);
  color: var(--base-color);
  font-family: var(--kanit), var(--roboto), sans-serif;
}

header {
  position: relative;
  height: var(--header-height);
  position: fixed;
  z-index: 20;
  width: 100%;
  top: 0;
  left: 0;
  padding: 0 calc(1rem + var(--base-body-gap));
  display: flex;
  align-items: center;
}
header .logo svg {
  max-width: calc(var(--header-height) + 3.5vw);
  color: var(--base-color);
}
header .logo svg #path-brush {
  color: var(--base-logo-brush-color);
}

.main-wrapper {
  position: relative;
  background-color: var(--base-bg-color);
  width: 100%;
  min-height: 100vh;
  padding-block: calc(var(--header-height) + 1vw) calc(1rem + var(--base-body-gap));
  padding-inline: calc(1rem + var(--base-body-gap));
  display: flex;
}

.main {
  position: relative;
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.main .color-conversion-heading {
  font-size: clamp(1.5rem, 6vw, 2.5rem);
  margin-bottom: 1rem;
  display: flex;
  align-items: center;
  gap: 1.5rem;
}
.main .color-conversion-heading span {
  letter-spacing: 0.15rem;
  font-weight: 100;
}
.main .color-conversion-heading span:last-child {
  font-weight: 600;
  color: var(--primary);
}
.main .color-conversion-heading i {
  font-size: 80%;
  opacity: 0.5;
}
.main .inputs-container {
  --input-height: 70px;
  --input-padding-x: calc(var(--input-height) / 3);
  --input-border-radius: .6rem;
  --input-border-color: var(--base-color);
  --input-border-width: 1px;
  --input-label-color: var(--base-color);
  --input-font-size: clamp(1rem, 5vw, 1.65rem);
  --input-reverse-icon-size: calc(var(--input-height) / 1.5);
  --input-reverse-border-color: var(--base-color);
  position: relative;
  width: 100%;
  max-width: 500px;
  display: flex;
  flex-direction: column;
  background-color: var(--input-bg-color);
  border-radius: var(--input-border-radius);
  box-shadow: 0px 4.4px 3.6px rgba(0, 0, 0, 0.024), 0px 12.3px 10px rgba(0, 0, 0, 0.035), 0px 29.5px 24.1px rgba(0, 0, 0, 0.046), 0px 98px 80px rgba(0, 0, 0, 0.07);
}
.main .inputs-container .reverse-button {
  width: var(--input-reverse-icon-size);
  height: var(--input-reverse-icon-size);
  border-radius: var(--input-height);
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--base-fallback-bg-color);
  color: var(--base-color);
  font-size: var(--input-font-size);
  position: absolute;
  top: calc(50% - var(--input-reverse-icon-size) / 2);
  left: calc(100% - var(--input-reverse-icon-size) / 2);
  box-shadow: inset 0 0 0 var(--input-border-width) var(--input-reverse-border-color);
  z-index: 3;
  cursor: pointer;
  isolation: isolate;
}
.main .inputs-container .reverse-button::after {
  content: "";
  position: absolute;
  inset: 0;
  background-color: var(--base-bg-color);
  box-shadow: inherit;
  border-radius: inherit;
  z-index: -1;
  transition: var(--transition);
}
.main .inputs-container .reverse-button i {
  rotate: 90deg;
  font-size: 80%;
  pointer-events: none;
}
.main .inputs-container .reverse-button:hover {
  transition: var(--transition);
  --base-bg-color: var(--primary);
  --input-reverse-border-color: var(--primary);
  background-color: var(--primary);
  color: var(--dark);
}
.main .inputs-container__input {
  position: relative;
  display: flex;
  flex-direction: row-reverse;
  height: var(--input-height);
  box-shadow: inset 0 0 0 var(--input-border-width) var(--input-border-color);
  transition: var(--transition);
}
.main .inputs-container__input .copy-block {
  color: var(--primary);
  position: absolute;
  width: calc(var(--input-height) / 1.6);
  height: calc(var(--input-height) / 1.6);
  border-radius: calc(var(--input-border-radius) / 2);
  cursor: pointer;
  right: 0;
  opacity: 0;
  visibility: hidden;
  top: 50%;
  transform: translateY(-50%);
  display: flex;
  align-items: center;
  justify-content: center;
  transition: var(--transition);
}
.main .inputs-container__input .copy-block i {
  font-size: 150%;
  pointer-events: none;
}
.main .inputs-container__input .copy-block .coppeid-tooltip {
  --pointer-size: 6px;
  position: absolute;
  right: calc(100% + var(--pointer-size));
  background-color: var(--white);
  color: var(--dark);
  padding: 0.15rem 0.45rem;
  font-size: 0.85rem;
  border-radius: 0.25rem;
  display: flex;
  align-items: center;
  transition: var(--transition);
  transition-delay: 1s;
}
.main .inputs-container__input .copy-block .coppeid-tooltip::after {
  left: 100%;
  content: "";
  position: absolute;
  border-top: var(--pointer-size) solid transparent;
  border-bottom: var(--pointer-size) solid transparent;
  border-left: calc(var(--pointer-size) - 1px) solid var(--white);
}
.main .inputs-container__input .copy-block:hover {
  background-color: var(--primary);
  color: var(--dark);
}
.main .inputs-container__input .rgb-inputs {
  display: flex;
  align-items: center;
  width: 100%;
}
.main .inputs-container__input .rgb-inputs input {
  text-align: center;
  max-width: 80px;
  height: calc(var(--input-height) / 2);
}
.main .inputs-container__input .rgb-inputs input:not(:last-child) {
  border-right: 1px solid var(--base-color);
}
.main .inputs-container__input label {
  flex-shrink: 0;
  display: flex;
  align-items: center;
  margin: 0;
  color: var(--input-label-color);
  padding-inline: var(--input-padding-x);
  font-size: var(--input-font-size);
  transition: var(--transition);
}
.main .inputs-container__input input {
  width: 100%;
  height: 100%;
  outline: none;
  outline-color: transparent;
  border: 0;
  font-size: var(--input-font-size);
  background-color: transparent;
  text-transform: uppercase;
  color: var(--base-color);
}
.main .inputs-container__input input::-moz-placeholder {
  color: var(--base-color);
  opacity: 0.25;
}
.main .inputs-container__input input:-ms-input-placeholder {
  color: var(--base-color);
  opacity: 0.25;
}
.main .inputs-container__input input::placeholder {
  color: var(--base-color);
  opacity: 0.25;
}
.main .inputs-container__input .input-alert {
  position: absolute;
  color: var(--danger);
  top: calc(100% + var(--input-height) + 0.5rem);
  left: 0;
}
.main .inputs-container__input--hex {
  border-radius: var(--input-border-radius) var(--input-border-radius) 0 0;
  margin-bottom: calc(0px - var(--input-border-width));
}
.main .inputs-container__input--rgb {
  border-radius: 0 0 var(--input-border-radius) var(--input-border-radius);
}
.main .inputs-container__input--rgb .input-alert {
  top: calc(100% + 0.5rem);
}
.main .inputs-container__input.error {
  --input-border-color: var(--danger);
  z-index: 1;
  box-shadow: inset 0 0 0 var(--input-border-width) var(--input-border-color), 0 0 0 2px var(--input-border-color);
}
.main .inputs-container__input:not(.main .inputs-container__input.error):focus-within {
  --input-label-color: var(--primary);
  --input-border-color: var(--primary);
  z-index: 1;
}
.main .inputs-container__input:hover .copy-block {
  right: calc(var(--input-padding-x) * 1.5);
  visibility: visible;
  opacity: 1;
}
.main .inputs-container.reversed .inputs-container__input--hex {
  border-radius: 0 0 var(--input-border-radius) var(--input-border-radius);
  top: calc(var(--input-height) - 1px);
}
.main .inputs-container.reversed .inputs-container__input--hex .input-alert {
  top: calc(100% + 0.5rem);
}
.main .inputs-container.reversed .inputs-container__input--rgb {
  border-radius: var(--input-border-radius) var(--input-border-radius) 0 0;
  top: calc(0px - var(--input-height) + 1px);
}
.main .inputs-container.reversed .inputs-container__input--rgb .input-alert {
  top: calc(100% + var(--input-height) + 0.5rem);
}
.main .inputs-container:focus-within .reverse-button {
  --input-reverse-border-color: var(--primary);
}